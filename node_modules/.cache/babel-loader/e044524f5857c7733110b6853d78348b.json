{"ast":null,"code":"var _jsxFileName = \"/Users/dannblack/Desktop/Ironhack/semana8-9-fullstack/deadstarhevean/frontend/src/components/tareas/FormTarea.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from 'react';\nimport ProyectoContext from '../../context/proyectos/ProyectoContext';\nimport TareaContext from '../../context/tareas/TareaContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormTarea() {\n  _s();\n\n  // Extraer si un proyecto est치 activo\n  const context = useContext(ProyectoContext);\n  const {\n    proyecto\n  } = context; // Crear contexto de Tareas\n\n  const tareaContext = useContext(TareaContext);\n  const {\n    tareaseleccionada,\n    errortarea,\n    agregarTarea,\n    validarTarea,\n    obtenerTareas,\n    actualizarTarea,\n    limpiarTarea\n  } = tareaContext; // Detecta si hay una tarea seleccionada\n\n  useEffect(() => {\n    if (tareaseleccionada !== null) {\n      guardarTarea(tareaseleccionada);\n    } else {\n      guardarTarea({\n        nombre: ''\n      });\n    }\n  }, [tareaseleccionada]); // State del formulario\n\n  const [tarea, guardarTarea] = useState({\n    nombre: \"\"\n  }); // Extraer el nombre del proyecto\n\n  const {\n    nombre\n  } = tarea; // Si no hay proyecto seleccionado\n\n  if (!proyecto) return null; // Array destructuring para extraer el proyecto actual\n\n  const [proyectoActual] = proyecto; // Leer los valores del formulario\n\n  const handleChange = e => {\n    guardarTarea({ ...tarea,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault(); // Validar\n\n    if (nombre.trim() === \"\") {\n      validarTarea();\n      return;\n    } // Si es edici칩n o si es nueva tarea\n\n\n    if (tareaseleccionada === null) {\n      // tarea nueva\n      // Agregar la nueva tarea al state de tareas\n      tarea.proyectoId = proyectoActual.id;\n      tarea.estado = false;\n      agregarTarea(tarea);\n    } else {\n      // Actualizar tarea existente\n      actualizarTarea(tarea); // Elimina la tarea seleccionada del state\n\n      limpiarTarea();\n    } // Obtener y filtrar las tareas del proyecto actual\n\n\n    obtenerTareas(proyectoActual.id); // Reiniciar el form\n\n    guardarTarea({\n      nombre: \"\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formulario\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contenedor-input\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-text\",\n            placeholder: \"Nombre tarea...\",\n            name: \"nombre\",\n            value: nombre,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contenedor-input\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            className: \"btn btn-primario btn-submit btn-block\",\n            value: tareaseleccionada ? 'Editar tarea' : 'Agregar tarea'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), errortarea ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mensaje error\",\n        children: \"El nombre de la tarea es obligatorio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 31\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FormTarea, \"KavFLpf1xlr9xG2INqh0Zv2S8/0=\");\n\n_c = FormTarea;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormTarea\");","map":{"version":3,"sources":["/Users/dannblack/Desktop/Ironhack/semana8-9-fullstack/deadstarhevean/frontend/src/components/tareas/FormTarea.js"],"names":["React","useState","useContext","useEffect","ProyectoContext","TareaContext","FormTarea","context","proyecto","tareaContext","tareaseleccionada","errortarea","agregarTarea","validarTarea","obtenerTareas","actualizarTarea","limpiarTarea","guardarTarea","nombre","tarea","proyectoActual","handleChange","e","target","name","value","onSubmit","preventDefault","trim","proyectoId","id","estado"],"mappings":"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","sourcesContent":["import React, {useState, useContext, useEffect} from 'react'\nimport ProyectoContext from '../../context/proyectos/ProyectoContext'\nimport TareaContext from '../../context/tareas/TareaContext'\n\nexport default function FormTarea() {\n\n    // Extraer si un proyecto est치 activo\n    const context = useContext(ProyectoContext)\n    const { proyecto } = context\n\n    // Crear contexto de Tareas\n    const tareaContext = useContext(TareaContext)\n    const { tareaseleccionada, errortarea, agregarTarea, validarTarea, obtenerTareas, actualizarTarea, limpiarTarea  } = tareaContext\n\n    // Detecta si hay una tarea seleccionada\n    useEffect(() => {\n        if(tareaseleccionada !== null){\n            guardarTarea(tareaseleccionada)\n        } else {\n            guardarTarea({\n                nombre: ''\n            })\n        }\n    }, [tareaseleccionada])\n\n    // State del formulario\n\n    const [tarea, guardarTarea] = useState({\n        nombre: \"\"\n    })\n\n    // Extraer el nombre del proyecto\n    const {nombre} = tarea\n\n    // Si no hay proyecto seleccionado\n    if (!proyecto) return null\n\n    // Array destructuring para extraer el proyecto actual\n    const [proyectoActual] = proyecto\n\n\n    // Leer los valores del formulario\n    const handleChange = e => {\n        guardarTarea({\n            ...tarea,\n            [e.target.name]: e.target.value\n        })\n    }\n\n\n    const onSubmit = e => {\n        e.preventDefault()\n\n        // Validar\n        if(nombre.trim() === \"\"){\n            validarTarea()\n            return\n        }        \n\n        // Si es edici칩n o si es nueva tarea\n        if (tareaseleccionada === null){\n            // tarea nueva\n            // Agregar la nueva tarea al state de tareas\n            tarea.proyectoId = proyectoActual.id\n            tarea.estado = false\n            \n            agregarTarea(tarea)\n        } else {\n            // Actualizar tarea existente\n            actualizarTarea(tarea)\n\n            // Elimina la tarea seleccionada del state\n            limpiarTarea()\n        }\n        \n        // Obtener y filtrar las tareas del proyecto actual\n        obtenerTareas(proyectoActual.id)\n\n        // Reiniciar el form\n        guardarTarea({\n            nombre: \"\"\n        })\n    }\n\n    return (\n        <div>\n            <div className=\"formulario\">\n                <form\n                    onSubmit={onSubmit}\n                >\n                    <div className=\"contenedor-input\">\n                        <input \n                            type=\"text\"\n                            className=\"input-text\"\n                            placeholder=\"Nombre tarea...\"\n                            name=\"nombre\"\n                            value={nombre}\n                            onChange={handleChange}\n                        />\n                    </div>\n                    <div className=\"contenedor-input\">\n                        <input \n                            type=\"submit\" \n                            className=\"btn btn-primario btn-submit btn-block\"                           \n                            value={tareaseleccionada ? 'Editar tarea' : 'Agregar tarea'}\n                        />\n                    </div> \n                </form>\n\n                {errortarea ? <p className=\"mensaje error\">El nombre de la tarea es obligatorio</p> : null}\n            </div>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}