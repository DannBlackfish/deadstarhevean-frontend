{"ast":null,"code":"var _jsxFileName = \"/Users/dannblack/Desktop/Ironhack/semana8-9-fullstack/deadstarhevean/frontend/src/context/proyectos/ProyectoState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport ProyectoContext from './ProyectoContext';\nimport ProyectoReducer from './ProyectoReducer';\nimport { FORMULARIO_PROYECTO, OBTENER_PROYECTOS, AGREGAR_PROYECTO, VALIDAR_FORMULARIO, PROYECTO_ACTUAL, ELIMINAR_PROYECTO, PROYECTO_ERROR } from '../../types';\nimport clienteAxios from '../../config/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProyectoState = props => {\n  _s();\n\n  const initialState = {\n    formulario: false,\n    proyectos: [],\n    errorformulario: false,\n    proyecto: null,\n    mensaje: null\n  }; // Dispatch para ejecutar las acciones\n\n  const [state, dispatch] = useReducer(ProyectoReducer, initialState); // Serie de funciones para el CRUD\n\n  const mostrarFormulario = () => {\n    dispatch({\n      type: FORMULARIO_PROYECTO\n    });\n  }; // Obtener los proyectos\n\n\n  const obtenerProyectos = async () => {\n    try {\n      const resultado = await clienteAxios.get('/api/proyectos');\n      dispatch({\n        type: OBTENER_PROYECTOS,\n        payload: resultado.data.proyectos\n      });\n    } catch (error) {\n      const alerta = {\n        msg: \"Hubo un error\",\n        categoria: \"alert-error\"\n      };\n      dispatch({\n        type: PROYECTO_ERROR,\n        payload: alerta\n      });\n    }\n  }; // Agregar nuevo proyecto\n\n\n  const agregarProyecto = async proyecto => {\n    try {\n      const resultado = await clienteAxios.post('/api/proyectos', proyecto);\n      console.log(resultado); // Insertar el proyecto en el state\n\n      dispatch({\n        type: AGREGAR_PROYECTO,\n        payload: resultado.data\n      });\n    } catch (error) {\n      const alerta = {\n        msg: \"Hubo un error\",\n        categoria: \"alert-error\"\n      };\n      dispatch({\n        type: PROYECTO_ERROR,\n        payload: alerta\n      });\n    }\n  }; // validar formulario por errores\n\n\n  const mostrarError = () => {\n    dispatch({\n      type: VALIDAR_FORMULARIO\n    });\n  }; // Selecciona el proyecto que el usuario dio click\n\n\n  const proyectoActual = proyectoId => {\n    dispatch({\n      type: PROYECTO_ACTUAL,\n      payload: proyectoId\n    });\n  }; // Elimina un proyecto\n\n\n  const eliminarProyecto = async proyectoId => {\n    try {\n      await clienteAxios.delete(`/api/proyectos/${proyectoId}`);\n      dispatch({\n        type: ELIMINAR_PROYECTO,\n        payload: proyectoId\n      });\n    } catch (error) {\n      const alerta = {\n        msg: \"Hubo un error\",\n        categoria: \"alert-error\"\n      };\n      dispatch({\n        type: PROYECTO_ERROR,\n        payload: alerta\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ProyectoContext.Provider, {\n    value: {\n      formulario: state.formulario,\n      proyectos: state.proyectos,\n      errorformulario: state.errorformulario,\n      proyecto: state.proyecto,\n      mensaje: state.mensaje,\n      mostrarFormulario,\n      obtenerProyectos,\n      agregarProyecto,\n      mostrarError,\n      proyectoActual,\n      eliminarProyecto\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProyectoState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ProyectoState;\nexport default ProyectoState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProyectoState\");","map":{"version":3,"sources":["/Users/dannblack/Desktop/Ironhack/semana8-9-fullstack/deadstarhevean/frontend/src/context/proyectos/ProyectoState.js"],"names":["React","useReducer","ProyectoContext","ProyectoReducer","FORMULARIO_PROYECTO","OBTENER_PROYECTOS","AGREGAR_PROYECTO","VALIDAR_FORMULARIO","PROYECTO_ACTUAL","ELIMINAR_PROYECTO","PROYECTO_ERROR","clienteAxios","ProyectoState","props","initialState","formulario","proyectos","errorformulario","proyecto","mensaje","state","dispatch","mostrarFormulario","type","obtenerProyectos","resultado","get","payload","data","error","alerta","msg","categoria","agregarProyecto","post","console","log","mostrarError","proyectoActual","proyectoId","eliminarProyecto","delete","children"],"mappings":"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","sourcesContent":["import React, {useReducer} from 'react'\n\nimport ProyectoContext from './ProyectoContext'\nimport ProyectoReducer from './ProyectoReducer'\n\nimport {\n    FORMULARIO_PROYECTO,\n    OBTENER_PROYECTOS,\n    AGREGAR_PROYECTO,\n    VALIDAR_FORMULARIO,\n    PROYECTO_ACTUAL,\n    ELIMINAR_PROYECTO,\n    PROYECTO_ERROR\n} from '../../types'\n\nimport clienteAxios from '../../config/axios'\n\nconst ProyectoState = props => {\n\n    const initialState = {\n        formulario: false,\n        proyectos: [],\n        errorformulario: false,\n        proyecto: null,\n        mensaje: null\n    }\n\n    // Dispatch para ejecutar las acciones\n    const [state, dispatch] = useReducer(ProyectoReducer, initialState)\n\n    // Serie de funciones para el CRUD\n    const mostrarFormulario = () => {\n        dispatch({\n            type: FORMULARIO_PROYECTO\n        })\n    }\n\n    // Obtener los proyectos\n\n    const obtenerProyectos = async () => {\n        try {\n            \n            const resultado = await clienteAxios.get('/api/proyectos')\n\n            dispatch({\n                type: OBTENER_PROYECTOS,\n                payload: resultado.data.proyectos\n            })\n\n        } catch (error) {\n            const alerta = {\n                msg: \"Hubo un error\",\n                categoria: \"alert-error\"\n            }\n            dispatch({\n                type: PROYECTO_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    // Agregar nuevo proyecto\n    const agregarProyecto = async proyecto =>  {\n\n        try {\n            const resultado = await clienteAxios.post('/api/proyectos', proyecto)\n            console.log(resultado)\n\n            // Insertar el proyecto en el state\n            dispatch({\n                type: AGREGAR_PROYECTO,\n                payload: resultado.data\n            })\n\n\n        } catch (error) {\n            const alerta = {\n                msg: \"Hubo un error\",\n                categoria: \"alert-error\"\n            }\n            dispatch({\n                type: PROYECTO_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    // validar formulario por errores\n\n    const mostrarError = () => {\n        dispatch({\n            type: VALIDAR_FORMULARIO\n        })\n    }\n\n    // Selecciona el proyecto que el usuario dio click\n\n    const proyectoActual = proyectoId => {\n        dispatch({\n            type: PROYECTO_ACTUAL,\n            payload: proyectoId\n        })\n    }\n\n    // Elimina un proyecto\n\n    const eliminarProyecto = async proyectoId => {\n\n        try {\n            await clienteAxios.delete(`/api/proyectos/${proyectoId}`)\n            dispatch({\n                type: ELIMINAR_PROYECTO,\n                payload: proyectoId\n            })\n        } catch (error) {\n            const alerta = {\n                msg: \"Hubo un error\",\n                categoria: \"alert-error\"\n            }\n            dispatch({\n                type: PROYECTO_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    return (\n        <ProyectoContext.Provider\n            value={{\n                formulario: state.formulario,\n                proyectos: state.proyectos,\n                errorformulario: state.errorformulario,\n                proyecto: state.proyecto,\n                mensaje: state.mensaje,\n                mostrarFormulario,\n                obtenerProyectos,\n                agregarProyecto,\n                mostrarError,\n                proyectoActual,\n                eliminarProyecto\n            }}\n        >\n            {props.children}\n        </ProyectoContext.Provider>\n    )\n\n}\n\nexport default ProyectoState"]},"metadata":{},"sourceType":"module"}