{"ast":null,"code":"var _jsxFileName = \"/Users/dannblack/Desktop/Ironhack/semana8-9-fullstack/deadstarhevean/frontend/src/context/autenticacion/AuthState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport AuthContext from './AuthContext';\nimport AuthReducer from './AuthReducer';\nimport service from '../../config/axios';\nimport tokenAuth from '../../config/token';\nimport { REGISTRO_EXITOSO, REGISTRO_ERROR, OBTENER_USUARIO, LOGIN_EXITOSO, LOGIN_ERROR, CERRAR_SESION, AGREGAR_CARRITO, EDITAR_USUARIO, ELIMINAR_USUARIO } from '../../types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthState = props => {\n  _s();\n\n  // DATOS INICIALES CON LOS CUALES EMPEZAMOS EL ESTADO GLOBAL\n  const initialState = {\n    token: localStorage.getItem('token'),\n    autenticado: null,\n    usuario: null,\n    // información del usuario\n    mensaje: null,\n    // relacionado con las alertas\n    cargando: true\n  };\n  const [state, dispatch] = useReducer(AuthReducer, initialState); // Registra un usuario\n\n  const registrarUsuario = async datos => {\n    console.log(\"estoy en registrar usuarios\");\n    console.log(datos);\n\n    try {\n      const respuesta = await service.post('/user', datos);\n      dispatch({\n        type: REGISTRO_EXITOSO,\n        payload: respuesta.data\n      }); // OBTENER EL USUARIO\n\n      usuarioAutenticado();\n    } catch (error) {\n      // console.log(error.response.data.msg)\n      const alerta = {\n        msg: error.response.data.msg,\n        categoria: \"alerta-error\"\n      };\n      dispatch({\n        type: REGISTRO_ERROR,\n        payload: alerta\n      });\n    }\n  }; // Retorna el usuario autenticado\n\n\n  const usuarioAutenticado = async () => {\n    const token = localStorage.getItem('token'); // LEER EL TOKEN DE LOCAL STORAGE\n\n    if (token) {\n      // Función para enviar el token por headers\n      tokenAuth(token);\n    }\n\n    try {\n      const respuesta = await service.get('/auth');\n      dispatch({\n        type: OBTENER_USUARIO,\n        payload: respuesta.data.user\n      });\n    } catch (error) {\n      dispatch({\n        type: LOGIN_ERROR\n      });\n    }\n  }; // Cuando el usuario inicia sesión\n\n\n  const iniciarSesion = async datos => {\n    try {\n      const respuesta = await service.post('/auth', datos);\n      dispatch({\n        type: LOGIN_EXITOSO,\n        payload: respuesta.data\n      });\n      usuarioAutenticado();\n    } catch (error) {\n      console.log(error);\n      const alerta = {\n        msg: error.response.data.msg,\n        categoria: \"alerta-error\"\n      };\n      dispatch({\n        type: LOGIN_ERROR,\n        payload: alerta\n      });\n    }\n  }; // Cierra la sesión del usuario\n\n\n  const cerrarSesion = () => {\n    dispatch({\n      type: CERRAR_SESION\n    });\n  };\n\n  const agregarCarrito = async producto => {\n    const result = await service.patch(\"/user/profile/edit\", producto);\n    dispatch({\n      type: AGREGAR_CARRITO,\n      payload: result.data.profile\n    });\n  };\n\n  const editarUsuario = async datos => {\n    const result = await service.put(`/user/profile/change/$`, datos);\n    dispatch({\n      type: EDITAR_USUARIO,\n      payload: result.data.profile\n    });\n  };\n\n  const eliminarUsuario = async info => {\n    const result = await service.delete(\"/user/profile/delete\", info);\n    dispatch({\n      type: ELIMINAR_USUARIO,\n      payload: info\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      autenticado: state.autenticado,\n      usuario: state.usuario,\n      mensaje: state.mensaje,\n      cargando: state.cargando,\n      registrarUsuario,\n      iniciarSesion,\n      usuarioAutenticado,\n      cerrarSesion,\n      agregarCarrito,\n      editarUsuario,\n      eliminarUsuario\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AuthState;\nexport default AuthState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"sources":["/Users/dannblack/Desktop/Ironhack/semana8-9-fullstack/deadstarhevean/frontend/src/context/autenticacion/AuthState.js"],"names":["React","useReducer","AuthContext","AuthReducer","service","tokenAuth","REGISTRO_EXITOSO","REGISTRO_ERROR","OBTENER_USUARIO","LOGIN_EXITOSO","LOGIN_ERROR","CERRAR_SESION","AGREGAR_CARRITO","EDITAR_USUARIO","ELIMINAR_USUARIO","AuthState","props","initialState","token","localStorage","getItem","autenticado","usuario","mensaje","cargando","state","dispatch","registrarUsuario","datos","console","log","respuesta","post","type","payload","data","usuarioAutenticado","error","alerta","msg","response","categoria","get","user","iniciarSesion","cerrarSesion","agregarCarrito","producto","result","patch","profile","editarUsuario","put","eliminarUsuario","info","delete","children"],"mappings":"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","sourcesContent":["import React, {useReducer} from 'react'\nimport AuthContext from './AuthContext'\nimport AuthReducer from './AuthReducer'\n\nimport service from '../../config/axios'\nimport tokenAuth from '../../config/token'\n\nimport {\n    REGISTRO_EXITOSO,\n    REGISTRO_ERROR,\n    OBTENER_USUARIO,\n    LOGIN_EXITOSO,\n    LOGIN_ERROR,\n    CERRAR_SESION,\n    AGREGAR_CARRITO,\n    EDITAR_USUARIO,\n    ELIMINAR_USUARIO\n} from '../../types'\n\n\nconst AuthState = props => {\n\n    // DATOS INICIALES CON LOS CUALES EMPEZAMOS EL ESTADO GLOBAL\n    const initialState = {\n        token: localStorage.getItem('token'), \n        autenticado: null,\n        usuario: null, // información del usuario\n        mensaje: null,  // relacionado con las alertas\n        cargando: true,\n    }\n\n    const [state, dispatch] = useReducer(AuthReducer, initialState)\n    \n    // Registra un usuario\n    const registrarUsuario = async datos => {\n        console.log(\"estoy en registrar usuarios\")\n        console.log(datos)\n        try{\n            const respuesta = await service.post('/user', datos)\n\n            dispatch({\n                type: REGISTRO_EXITOSO,\n                payload: respuesta.data\n            })\n\n            // OBTENER EL USUARIO\n            usuarioAutenticado()\n\n        } catch(error){\n            // console.log(error.response.data.msg)\n            const alerta = {\n                msg: error.response.data.msg,\n                categoria: \"alerta-error\"\n            }\n            dispatch({\n                type: REGISTRO_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    // Retorna el usuario autenticado\n    const usuarioAutenticado = async () => {\n        const token = localStorage.getItem('token') // LEER EL TOKEN DE LOCAL STORAGE\n\n        if(token) {\n            // Función para enviar el token por headers\n            tokenAuth(token)\n        }\n\n        try {\n            const respuesta = await service.get('/auth')\n\n            dispatch({\n                type: OBTENER_USUARIO,\n                payload: respuesta.data.user\n            })\n\n\n        } catch(error) {\n            dispatch({\n                type: LOGIN_ERROR\n            })\n        }\n\n    }   \n\n    // Cuando el usuario inicia sesión\n    const iniciarSesion = async datos => {\n        try{\n            const respuesta = await service.post('/auth', datos)\n            \n            dispatch({\n                type: LOGIN_EXITOSO,\n                payload: respuesta.data\n            })\n\n            usuarioAutenticado()\n\n        } catch(error){\n            console.log(error)\n            const alerta = {\n                msg: error.response.data.msg,\n                categoria: \"alerta-error\"\n            }\n            dispatch({\n                type: LOGIN_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    // Cierra la sesión del usuario\n    const cerrarSesion = () => {\n        dispatch({\n            type: CERRAR_SESION\n        })\n    }\n\n    const agregarCarrito = async (producto) => {\n        const result = await service.patch(\"/user/profile/edit\", producto)\n        dispatch({\n            type: AGREGAR_CARRITO,\n            payload: result.data.profile\n        })\n    }\n\n    const editarUsuario = async(datos) => {\n        const result = await service.put(`/user/profile/change/$`, datos)\n        dispatch({\n            type: EDITAR_USUARIO,\n            payload: result.data.profile\n        })\n    }\n\n\n    const eliminarUsuario = async(info) => {\n        const result = await service.delete(\"/user/profile/delete\", info)\n        dispatch({\n            type: ELIMINAR_USUARIO,\n            payload: info\n        })\n    }\n\n    return (\n        <AuthContext.Provider value={{\n            token: state.token,\n            autenticado: state.autenticado,\n            usuario: state.usuario,\n            mensaje: state.mensaje,\n            cargando: state.cargando,\n            registrarUsuario,\n            iniciarSesion,\n            usuarioAutenticado,\n            cerrarSesion,\n            agregarCarrito,\n            editarUsuario,\n            eliminarUsuario\n        }}>\n            {props.children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthState"]},"metadata":{},"sourceType":"module"}